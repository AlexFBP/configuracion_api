{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/aplicacion/": {
            "get": {
                "tags": [
                    "aplicacion"
                ],
                "description": "get Aplicacion",
                "operationId": "AplicacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Aplicacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "aplicacion"
                ],
                "description": "create Aplicacion",
                "operationId": "AplicacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Aplicacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Aplicacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Aplicacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/aplicacion/{id}": {
            "get": {
                "tags": [
                    "aplicacion"
                ],
                "description": "get Aplicacion by id",
                "operationId": "AplicacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Aplicacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "aplicacion"
                ],
                "description": "update the Aplicacion",
                "operationId": "AplicacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Aplicacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Aplicacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Aplicacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "aplicacion"
                ],
                "description": "delete the Aplicacion",
                "operationId": "AplicacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/menu_opcion/": {
            "get": {
                "tags": [
                    "menu_opcion"
                ],
                "description": "get MenuOpcion",
                "operationId": "MenuOpcionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MenuOpcion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "menu_opcion"
                ],
                "description": "create MenuOpcion",
                "operationId": "MenuOpcionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MenuOpcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MenuOpcion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MenuOpcion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/menu_opcion/{id}": {
            "get": {
                "tags": [
                    "menu_opcion"
                ],
                "description": "get MenuOpcion by id",
                "operationId": "MenuOpcionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MenuOpcion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "menu_opcion"
                ],
                "description": "update the MenuOpcion",
                "operationId": "MenuOpcionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MenuOpcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MenuOpcion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MenuOpcion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "menu_opcion"
                ],
                "description": "delete the MenuOpcion",
                "operationId": "MenuOpcionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/menu_opcion_padre/": {
            "get": {
                "tags": [
                    "menu_opcion_padre"
                ],
                "description": "get MenuOpcionPadre",
                "operationId": "MenuOpcionPadreController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MenuOpcionPadre"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "menu_opcion_padre"
                ],
                "description": "create MenuOpcionPadre",
                "operationId": "MenuOpcionPadreController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MenuOpcionPadre content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MenuOpcionPadre"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MenuOpcionPadre"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/menu_opcion_padre/{id}": {
            "get": {
                "tags": [
                    "menu_opcion_padre"
                ],
                "description": "get MenuOpcionPadre by id",
                "operationId": "MenuOpcionPadreController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MenuOpcionPadre"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "menu_opcion_padre"
                ],
                "description": "update the MenuOpcionPadre",
                "operationId": "MenuOpcionPadreController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MenuOpcionPadre content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MenuOpcionPadre"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MenuOpcionPadre"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "menu_opcion_padre"
                ],
                "description": "delete the MenuOpcionPadre",
                "operationId": "MenuOpcionPadreController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/notificacion/": {
            "get": {
                "tags": [
                    "notificacion"
                ],
                "description": "get Notificacion",
                "operationId": "NotificacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Notificacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "notificacion"
                ],
                "description": "create Notificacion",
                "operationId": "NotificacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Notificacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Notificacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Notificacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/notificacion/{id}": {
            "get": {
                "tags": [
                    "notificacion"
                ],
                "description": "get Notificacion by id",
                "operationId": "NotificacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Notificacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "notificacion"
                ],
                "description": "update the Notificacion",
                "operationId": "NotificacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Notificacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Notificacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Notificacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "notificacion"
                ],
                "description": "delete the Notificacion",
                "operationId": "NotificacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/notificacion_estado/": {
            "get": {
                "tags": [
                    "notificacion_estado"
                ],
                "description": "get NotificacionEstado",
                "operationId": "NotificacionEstadoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.NotificacionEstado"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "notificacion_estado"
                ],
                "description": "create NotificacionEstado",
                "operationId": "NotificacionEstadoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NotificacionEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NotificacionEstado"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.NotificacionEstado"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/notificacion_estado/{id}": {
            "get": {
                "tags": [
                    "notificacion_estado"
                ],
                "description": "get NotificacionEstado by id",
                "operationId": "NotificacionEstadoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.NotificacionEstado"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "notificacion_estado"
                ],
                "description": "update the NotificacionEstado",
                "operationId": "NotificacionEstadoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NotificacionEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NotificacionEstado"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.NotificacionEstado"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "notificacion_estado"
                ],
                "description": "delete the NotificacionEstado",
                "operationId": "NotificacionEstadoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/notificacion_tipo/": {
            "get": {
                "tags": [
                    "notificacion_tipo"
                ],
                "description": "get NotificacionTipo",
                "operationId": "NotificacionTipoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.NotificacionTipo"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "notificacion_tipo"
                ],
                "description": "create NotificacionTipo",
                "operationId": "NotificacionTipoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NotificacionTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NotificacionTipo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.NotificacionTipo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/notificacion_tipo/{id}": {
            "get": {
                "tags": [
                    "notificacion_tipo"
                ],
                "description": "get NotificacionTipo by id",
                "operationId": "NotificacionTipoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.NotificacionTipo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "notificacion_tipo"
                ],
                "description": "update the NotificacionTipo",
                "operationId": "NotificacionTipoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NotificacionTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NotificacionTipo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.NotificacionTipo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "notificacion_tipo"
                ],
                "description": "delete the NotificacionTipo",
                "operationId": "NotificacionTipoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/parametro/": {
            "get": {
                "tags": [
                    "parametro"
                ],
                "description": "get Parametro",
                "operationId": "ParametroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Parametro"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "parametro"
                ],
                "description": "create Parametro",
                "operationId": "ParametroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Parametro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Parametro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Parametro"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/parametro/{id}": {
            "get": {
                "tags": [
                    "parametro"
                ],
                "description": "get Parametro by id",
                "operationId": "ParametroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Parametro"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametro"
                ],
                "description": "update the Parametro",
                "operationId": "ParametroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Parametro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Parametro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Parametro"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametro"
                ],
                "description": "delete the Parametro",
                "operationId": "ParametroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/perfil/": {
            "get": {
                "tags": [
                    "perfil"
                ],
                "description": "get Perfil",
                "operationId": "PerfilController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Perfil"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "perfil"
                ],
                "description": "create Perfil",
                "operationId": "PerfilController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Perfil content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Perfil"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Perfil"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/perfil/{id}": {
            "get": {
                "tags": [
                    "perfil"
                ],
                "description": "get Perfil by id",
                "operationId": "PerfilController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Perfil"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "perfil"
                ],
                "description": "update the Perfil",
                "operationId": "PerfilController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Perfil content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Perfil"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Perfil"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "perfil"
                ],
                "description": "delete the Perfil",
                "operationId": "PerfilController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/perfil_x_menu_opcion/": {
            "get": {
                "tags": [
                    "perfil_x_menu_opcion"
                ],
                "description": "get PerfilXMenuOpcion",
                "operationId": "PerfilXMenuOpcionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.PerfilXMenuOpcion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "perfil_x_menu_opcion"
                ],
                "description": "create PerfilXMenuOpcion",
                "operationId": "PerfilXMenuOpcionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PerfilXMenuOpcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PerfilXMenuOpcion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.PerfilXMenuOpcion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/perfil_x_menu_opcion/{id}": {
            "get": {
                "tags": [
                    "perfil_x_menu_opcion"
                ],
                "description": "get PerfilXMenuOpcion by id",
                "operationId": "PerfilXMenuOpcionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.PerfilXMenuOpcion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "perfil_x_menu_opcion"
                ],
                "description": "update the PerfilXMenuOpcion",
                "operationId": "PerfilXMenuOpcionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PerfilXMenuOpcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PerfilXMenuOpcion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.PerfilXMenuOpcion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "perfil_x_menu_opcion"
                ],
                "description": "delete the PerfilXMenuOpcion",
                "operationId": "PerfilXMenuOpcionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        ".Time": {
            "type": "object"
        },
        "models.Aplicacion": {
            "title": "Aplicacion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Dominio": {
                    "type": "string"
                },
                "EstadoActivo": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.MenuOpcion": {
            "title": "MenuOpcion",
            "type": "object",
            "properties": {
                "Aplicacion": {
                    "$ref": "#/definitions/models.Aplicacion"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Layout": {
                    "type": "string"
                },
                "Nombre": {
                    "type": "string"
                },
                "Url": {
                    "type": "string"
                }
            }
        },
        "models.MenuOpcionPadre": {
            "title": "MenuOpcionPadre",
            "type": "object",
            "properties": {
                "Hijo": {
                    "$ref": "#/definitions/models.MenuOpcion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Padre": {
                    "$ref": "#/definitions/models.MenuOpcion"
                }
            }
        },
        "models.Notificacion": {
            "title": "Notificacion",
            "type": "object",
            "properties": {
                "AplicacionOrigen": {
                    "$ref": "#/definitions/models.Aplicacion"
                },
                "CuerpoNotificacion": {
                    "type": "string"
                },
                "EstadoNotificacion": {
                    "$ref": "#/definitions/models.NotificacionEstado"
                },
                "FechaCreacion": {
                    "$ref": "#/definitions/time.Time"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PerfilDestino": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoNotificacion": {
                    "$ref": "#/definitions/models.NotificacionTipo"
                },
                "UsuarioDestino": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.NotificacionEstado": {
            "title": "NotificacionEstado",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.NotificacionTipo": {
            "title": "NotificacionTipo",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.Parametro": {
            "title": "Parametro",
            "type": "object",
            "properties": {
                "Aplicacion": {
                    "$ref": "#/definitions/models.Aplicacion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "Valor": {
                    "type": "string"
                }
            }
        },
        "models.Perfil": {
            "title": "Perfil",
            "type": "object",
            "properties": {
                "Aplicacion": {
                    "$ref": "#/definitions/models.Aplicacion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "Permiso": {
                    "type": "string"
                }
            }
        },
        "models.PerfilXMenuOpcion": {
            "title": "PerfilXMenuOpcion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Opcion": {
                    "$ref": "#/definitions/models.MenuOpcion"
                },
                "Perfil": {
                    "$ref": "#/definitions/models.Perfil"
                }
            }
        }
    },
    "tags": [
        {
            "name": "perfil",
            "description": "PerfilController oprations for Perfil\n"
        },
        {
            "name": "perfil_x_menu_opcion",
            "description": "PerfilXMenuOpcionController oprations for PerfilXMenuOpcion\n"
        },
        {
            "name": "menu_opcion_padre",
            "description": "MenuOpcionPadreController oprations for MenuOpcionPadre\n"
        },
        {
            "name": "menu_opcion",
            "description": "MenuOpcionController oprations for MenuOpcion\n"
        },
        {
            "name": "aplicacion",
            "description": "AplicacionController oprations for Aplicacion\n"
        },
        {
            "name": "parametro",
            "description": "ParametroController oprations for Parametro\n"
        },
        {
            "name": "notificacion_tipo",
            "description": "NotificacionTipoController operations for NotificacionTipo\n"
        },
        {
            "name": "notificacion",
            "description": "NotificacionController operations for Notificacion\n"
        },
        {
            "name": "notificacion_estado",
            "description": "NotificacionEstadoController operations for NotificacionEstado\n"
        }
    ]
}